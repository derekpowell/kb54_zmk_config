/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  DEL |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5    &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp DEL
   &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T     &kp Y  &kp U  &kp I     &kp O   &kp P    &kp RET
   &kp LALT &kp A  &kp S  &kp D  &kp F  &kp G     &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z  &kp X  &kp C  &kp V  &kp B     &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                        &kp LGUI &mo 1 &kp SPACE   &kp BSPC &kp RSHFT &mo 2
                        >;
                };

                lower_layer {
                    display-name = "LWR";
                    label = "LWR";
// -----------------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &bt BT_NXT   &kp N1      &kp N2      &kp N3       &kp N4       &kp N5             &kp N6       &kp N7      &kp N8      &kp N9      &kp N0        &kp DEL
   &bt BT_PRV   &kp EXCL    &kp AT      &kp HASH     &kp DLLR     &kp PRCNT          &kp LBKT     &kp RBKT    &kp UP      &kp LPAR    &kp RPAR      &kp RET
   &bt BT_CLR   &sk LALT    &sk LGUI    &sk LSHFT    &sk LCTRL    &sk RALT           &kp LA(LEFT) &kp LEFT    &kp DOWN    &kp RIGHT   &kp LA(RIGHT) &trans
   &kp LSHFT    &kp LG(Z)   &kp LG(X)   &kp LG(C)    &kp LG(V)    &trans             &kp LA(BSPC)       &trans      &trans      &trans      &trans        &trans
                                        &kp LGUI     &trans       &kp SPACE          &kp BSPC    &trans      &trans
                        >;
                };

                raise_layer {
                    display-name = "RSE";
                    label = "RSE";
// -----------------------------------------------------------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  DEL |
// |  TAB |     |VOL- |VOL+ | P/P | PRV |   | NXT | BR- | BR+ |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE &kp N1     &kp N7          &kp N8          &kp N9      &kp FSLH           &kp N6      &kp N7       &kp N8     &kp N9      &kp N0    &kp DEL
   &kp  TAB  &trans     &kp N4          &kp N5          &kp N6      &kp ASTRK          &kp GRAVE   &kp EQUAL    &kp UNDR   &kp MINUS   &kp PLUS  &kp RET
   &kp LALT  &trans     &kp N1          &kp N2          &kp N3      &kp PLUS           &kp ASTRK   &kp LPAR     &kp LBKT   &kp RBKT    &kp SEMI  &kp BSLH
   &kp LCTRL &trans     &kp BSPC        &kp N0          &kp DOT     &kp EQUAL          &kp TILDE   &kp RPAR     &kp LBRC   &kp RBRC    &kp COLON &kp PIPE
                                        &kp LGUI        &trans      &kp SPACE          &kp BSPC     &trans      &trans
                        >;
                };
        };
};
